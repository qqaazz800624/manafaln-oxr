seg_model:
  name: DeepLabV3Plus
  path: segmentation_models_pytorch
  input_keys: image
  output_keys: pred_seg
  args:
    in_channels: 3
    classes: 6
    encoder_name: tu-resnest50d
    encoder_weights: null

cac_model:
  name: DenseNet121
  input_keys: image
  output_keys: pred_cac
  args:
    spatial_dims: 2
    in_channels: 3
    out_channels: 1
    pretrained: False

preprocess:
  - name: EnsureChannelFirstd
    args:
      keys: [image_front_combined, image_front_soft, image_front_hard]
      channel_dim: no_channel
  - name: Resized
    args:
      keys: [image_front_combined, image_front_soft, image_front_hard]
      spatial_size: [512, 512]
  - name: ScaleIntensityd
    args:
      keys: [image_front_combined, image_front_soft, image_front_hard]
  - name: FixHorizontalFlipd
    path: custom.transforms.fix_horizontal_flip
    args:
      key: image_front_combined
      spatial_axis: 0
      model_weight: checkpoints/flip_combined.ckpt
      model_config:
        name: DenseNet121
        args:
          spatial_dims: 2
          in_channels: 1
          out_channels: 1
          pretrained: False
  - name: FixHorizontalFlipd
    path: custom.transforms.fix_horizontal_flip
    args:
      key: image_front_soft
      spatial_axis: 0
      model_weight: checkpoints/flip_soft.ckpt
      model_config:
        name: DenseNet121
        args:
          spatial_dims: 2
          in_channels: 1
          out_channels: 1
          pretrained: False
  - name: FixHorizontalFlipd
    path: custom.transforms.fix_horizontal_flip
    args:
      key: image_front_hard
      spatial_axis: 0
      model_weight: checkpoints/flip_hard.ckpt
      model_config:
        name: DenseNet121
        args:
          spatial_dims: 2
          in_channels: 1
          out_channels: 1
          pretrained: False
  - name: ConcatItemsd
    args:
      keys: [image_front_combined, image_front_soft, image_front_hard]
      name: image
  - name: EnsureTyped
    args:
      keys: image
      dtype: float32
  - name: EnsureChannelFirstd # (3, W, H) -> (B, 3, W, H)
    args:
      keys: image
      channel_dim: no_channel

midprocess:
  - name: SqueezeDimd # (B, 6, W, H) -> (6, W, H)
    args:
      keys: pred_seg
      dim: 0
  - name: SplitDimd # (6, W, H) -> (1, W, H)
    args:
      keys: pred_seg
      keepdim: True
      dim: 0
      output_postfixes: [chest, lung, heart, pleural_effusion, pneumonia, nodule]
  - name: Activationsd
    args:
      keys: pred_seg_heart
      sigmoid: True
  - name: AsDiscreted
    args:
      keys: pred_seg_heart
      threshold: 0.5
  - name: MaskIntensityd
    args:
      keys: image
      mask_key: pred_seg_heart
  - name: SqueezeDimd  # (1, W, H) -> (W, H)
    args:
      keys: pred_seg_heart
      dim: 0
  - name: SelectItemsd
    args:
      keys: [image, pred_seg_heart]

postprocess:
  - name: SqueezeDimd # (B, C) -> (B, )
    args:
      keys: pred_cac
      dim: 0
  - name: SqueezeDimd # (B, ) -> ()
    args:
      keys: pred_cac
      dim: 0
  - name: Activationsd
    args:
      keys: pred_cac
      sigmoid: True
